plugins {
  id 'java'
  id "io.spring.dependency-management" version "1.0.4.RELEASE"
  id "org.springframework.boot" version "2.0.0.RELEASE"
  id "org.owasp.dependencycheck" version "3.1.1"
}

group = 'de.kgeorgiew'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

ext {  
    junitJupiterVersion = '5.1.0'
	junitPlatformVersion = '1.1.0'
}  

test {
    failFast = true
    useJUnitPlatform {
		includeTags 'fast'
		excludeTags 'slow'
	}
	// testLogging {
	// 	events 'passed', 'skipped', 'failed'
	// }
	// reports {
	// 	html.enabled = true
 	// }
}

// dependencyCheck {
//     skipConfigurations = ['asciidoctor']
//     failBuildOnCVSS=11 // > 10 will never fail
// }

// Print plugin versions
task showClasspath {
    doLast {
        buildscript.configurations.classpath.each { println it.name }
    }
}
repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	// compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-webflux')
	runtime('org.springframework.boot:spring-boot-devtools')
	// runtime('com.h2database:h2')
	// runtime('mysql:mysql-connector-java')
	
	compileOnly('org.projectlombok:lombok')
	annotationProcessor('org.projectlombok:lombok')
	
	testCompile ('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit;'
    }
	// testCompile('io.projectreactor:reactor-test')

	// JUnit Jupiter API and TestEngine implementation
	// testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
	// testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"

	// testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}") {
	// 	because 'allows tests to run from IDEs that bundle older version of launcher'
	// }
}

 task wrapper(type: Wrapper) {
 	description = 'Generates gradlew[.bat] scripts'
	gradleVersion = '4.6'
 }